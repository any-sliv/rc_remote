# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml

# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

image: gcc

stages:
    - pre
    - build
    - unit_test
    - deploy
    - integration_test
    - post

pre build:
    stage: pre
    rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"'

    script:
    - sudo apt-get update --yes
    - sudo apt-get install --yes cmake
    - sudo apt-get install --yes gcc-arm-none-eabi
    - sudo apt-get install pigpiod
    - sudo apt-get install stlink

compile and build:
    stage: build
    rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"'

    script:
    - cmake -Bbuild -DCMAKE_TOOLCHAIN_FILE=gcc-arm-none-eabi.cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=true
    - make -j4

unit test:
    stage: unit_test
    script:
    - cd Tests/googletest
    - cmake .
    - make -j4
    - cd ..
    - cmake .
    - make -j4
    - ./utest

test deployment:
    stage: deploy
    script:
    - cd ~/dev/remote_thesis
    - st-info --probe
    - st-flash --connect-under-reset --flash=128k --freq=1800k --reset write ./build/rc_remote.bin 0x08000000

integration test:
    stage: integration_test
    script:
    - cd ~/dev/thesis_pi_test
    - python3 main.py

post ops:
    stage: post
    script:
    - clang-format