# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml

# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

image: gcc

stages:
    - .pre
    - build
    - test
    # - deploy

before_script:
    - sudo apt-get update --yes
    - sudo apt-get install --yes cmake
    - sudo apt-get install --yes gcc-arm-none-eabi
    - sudo apt-get install clang-format

    # clang-formatting
    - find App/ -iname '*.h' -o -iname '*.c' | xargs clang-format -i
    - find App/ -iname '*.hpp' -o -iname '*.cpp' | xargs clang-format -i
    - find Tests/Modules -iname '*.h' -o -iname '*.c' | xargs clang-format -i
    - find Tests/Modules -iname '*.hpp' -o -iname '*.cpp' | xargs clang-format -i
    - find Tests/Modules -iname '*.hpp' -o -iname '*.cxx' | xargs clang-format -i

build:
    tags:
    - raspberry
    rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    #- if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev"'
    stage: build


    script:
    - mkdir build
    - mkdir out
    - cd build
    - cmake ..
    - cmake --build .
    artifacts:
        paths:
        - build
